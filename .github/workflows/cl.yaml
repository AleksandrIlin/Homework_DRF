name: CI

on: [push, pull_request]


jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Install dependencies
        run: |
          poetry install --no-root

      - name: Создать роль PostgreSQL
        run: |
          sudo -u postgres psql -c "CREATE ROLE runner WITH LOGIN PASSWORD '12345';"

      - name: Set up PostgreSQL
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
          sudo service postgresql start
          sudo -u postgres psql -c "ALTER USER postgres PASSWORD '12345';"
          sudo -u postgres psql -c "CREATE DATABASE lesson;"
          sudo -u postgres psql -c "CREATE USER runner WITH PASSWORD '12345';"
          sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE lesson TO postgres;"
      - name: Run makemigrations
        run: |
          poetry run python manage.py makemigrations
      - name: Run migrate
        run: |
          poetry run python manage.py migrate
      - name: Run tests
        run: |
          poetry run python manage.py test
  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: success()

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to server
        run: |
          sshpass -p "${{ secrets.ROOT_PASSWORD }}" ssh -o StrictHostKeyChecking=no root@194.87.76.153 "cd /path/to/your/app && git pull && poetry install && sudo systemctl restart nginx"
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}